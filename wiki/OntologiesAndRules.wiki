#sidebar TableOfContent
<wiki:toc/>
<h1>Ontologies and rules</h1>

=Introduction=

Like HTML tells to browser how to present your text and images, ontologies tell sematic tools like search engines how to reason with your data.

The first conversion step ignores ontologies: it just turns gedcom tags into predicates and object classes. The approach results into conflicts, for example the title of a person is another concept (social rank: Mrs., Dr., Sir) than the title of a multimedia object which is rather a catchy phrase. Rules however can derive new statements that respect an ontology of your choice. Drop the original statements and you can get a valid semantic document. Thus you can model the data any way you want. Some ontologies that surfaced from a quick survey:
  * http://www.daml.org/2001/01/gedcom/gedcom is simple but uses only a fraction of the information that can be stored in a gedcom. It has an apparently abandoned [http://web.archive.org/web/20041214001231/http://orlando.drc.com/daml/Ontology/Genealogy/3.1/Gentology-ont.daml variant]http://gedcom2sem.googlecode.com/svn/trunk/wiki-images/icon_external_link_blue.png. More background on http://jay.askren.net/Projects/SemWeb/
  * [http://protege.cim3.net/file/pub/ontologies/generations/generations.owl generations.owl]http://gedcom2sem.googlecode.com/svn/trunk/wiki-images/icon_external_link_blue.png or [http://protege.cim3.net/file/pub/ontologies/family.swrl.owl/family.swrl.owl family.swrl.owl]http://gedcom2sem.googlecode.com/svn/trunk/wiki-images/icon_external_link_blue.png about relations
  * http://purl.org/vocab/bio together with [http://www.xml.com/pub/a/2004/02/04/foaf.html foaf]http://gedcom2sem.googlecode.com/svn/trunk/wiki-images/icon_external_link_blue.png seems to pretty much cover most of a gedcom file.

Technical details about [http://jena.apache.org/documentation/inference/index.html#rules jena's rules]http://gedcom2sem.googlecode.com/svn/trunk/wiki-images/icon_external_link_blue.png
and its built in [http://jena.apache.org/documentation/inference/index.html#RULEbuiltins primitives]http://gedcom2sem.googlecode.com/svn/trunk/wiki-images/icon_external_link_blue.png 

=Status=

An [https://code.google.com/p/gedcom2sem/source/browse/trunk/src/main/java/gedcom2sem/gedsem/Publish.java experimental alternative] for the convert command drops the original statements. A mapping to foaf/bio statements is under development. Notes and sources are not yet figured out.

The [https://code.google.com/p/gedcom2sem/source/browse/trunk/src/main/resources/rules/BasicRules.txt basic rules] and [https://code.google.com/p/gedcom2sem/source/browse/trunk/src/main/resources/rules/AdditionalRules.txt additional rules] were designed to simplify writing reports without any consideration about ontologies. It makes no sense to drop original statements in this case. NB: specify the additional rules after the basic rules.

= Customization =

Ontologies give you leaway to model your data to your own taste or to some practical purpose. For example if you specify someone is the child of a male person, you don't need to specify it is a father. Or the other way arround if you specify someone is a father, you don't need to specify he is male. With a proper ontology reasoners can deduce the same information in both cases. So the rules in this project are just examples, however some of the queries rely on some of the rules, their comment headers tells if and which.

Other details depend on what you do with and in your gedcom. These details are discussen in this chapter to help you construct additional rule files.

== Published gedcom / identification ==

When you upload your gedcom to some community or publish it yourself, you might want to link to that publication with an additional rule. In the following examples you should replace at least `SOMENAME` with a value related to your account or publication. Read also about "identifying marks" in this [http://www.xml.com/pub/a/2004/02/04/foaf.html Introduction to FOAF]

*ancestry.com*
{{{
[
  (?indi rdf:type  t:INDI)
  (?indi p:id ?i)
  regex(?i, '@(.*)@.*', ?id)
  uriConcat("http://wc.rootsweb.ancestry.com/cgi-bin/igm.cgi?op=GET&db=SOMENAME&id=", ?id, ?url)
->
  (?indi http://xmlns.com/foaf/0.1/isPrimaryTopicOf ?url  )
]
}}}

*genealogieonline.nl*
{{{
[
  (?indi rdf:type  t:INDI)
  (?indi p:id ?i)
  regex(?i, '@(.*)@.*', ?id)
  uriConcat("http://www.genealogieonline.nl/SOMENAME/", ?id, ".php", ?url)
->
  (?indi http://xmlns.com/foaf/0.1/isPrimaryTopicOf ?url  )
]
}}}

== notes, sources and multimedia objects ==

The meaning of these properties may vary with individual or project conventions. So no default rules can be specified to model them. Some examples however may be helpful but are still to be developped...