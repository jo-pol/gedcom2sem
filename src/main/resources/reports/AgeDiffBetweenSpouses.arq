##################################################################################################
# Copyright 2013, J. Pol 
# This file is part of free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation.
# This package is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details. A copy of the GNU General Public License is available at <http://www.gnu.org/licenses/>.
##################################################################################################
#
# Large age difference between spouses
#
# Needs the original statements.
#
# Variation hint:
# turn into a statistical report
# by dropping or inverting the filter
# and select just "avg(?diff)".
#
###############################################

### external data
PREFIX rdf:          <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX rdfs:         <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX xsd:          <http://www.w3.org/2001/XMLSchema#> 
PREFIX wgs84_pos:    <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX gn:           <http://www.geonames.org/ontology#>
PREFIX dbpedia-owl:  <http://dbpedia.org/ontology/>
PREFIX dbpedia-prop: <http://dbpedia.org/property/>
PREFIX dbpr:         <http://dbpedia.org/resource/>
PREFIX foaf:         <http://xmlns.com/foaf/0.1/>

### converted gedcom
PREFIX t: <http://purl.org/vocab/vnd/gedcom2sem.googlecode.com/2013-01-13/GedcomTags/type#> 
PREFIX r: <http://purl.org/vocab/vnd/gedcom2sem.googlecode.com/2013-01-13/GedcomTags/rule#> 
PREFIX p: <http://purl.org/vocab/vnd/gedcom2sem.googlecode.com/2013-01-13/GedcomTags/predicate#> 

### language extensions
PREFIX  fn: <http://www.w3.org/2005/xpath-functions#> 
PREFIX afn: <http://jena.hpl.hp.com/ARQ/function#> 
PREFIX apf: <http://jena.hpl.hp.com/ARQ/property#> 

###############################################
SELECT
  (str(?idHusb ) as ?id_husband)
  (str(?idWife ) as ?id_wife)
  (    ?yearHusb as ?birth_husband)
  (    ?yearWife as ?birth_wife)
  ?diff
{
  ### choose what you call large 

  LET (?minDiff := 5)

  ### select required data

  ?fam p:HUSB ?husb; 
       p:WIFE ?wife.
  ?husb p:id ?idHusb; 
        p:BIRT [p:DATE [rdfs:label ?dateHusb]].
  ?wife p:id ?idWife;  
        p:BIRT [p:DATE [rdfs:label ?dateWife]].

  ### get the years out of the dates

  LET (?yearHusb := fn:substring(str(?dateHusb),0,5))
  LET (?yearWife := fn:substring(str(?dateWife),0,5))

  ### compute the difference

  LET (?diff := xsd:int(?yearHusb) - xsd:int(?yearWife))

  ### check against chosen threshold

  FILTER (?diff > ?minDiff || ?diff < -?minDiff)
}
ORDER BY ?diff